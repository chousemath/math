// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';


var pi = 4.0 * Math.atan(1.0);

function safeValue(value) {
  if (value < 0.0) {
    return 0.0;
  } else {
    return value;
  }
}

function areaCircle(radius) {
  var safeRadius = safeValue(radius);
  return pi * safeRadius * safeRadius;
}

function areaParallelogram(base, height) {
  var safeBase = safeValue(base);
  var safeHeight = safeValue(height);
  return safeBase * safeHeight;
}

function areaRectangle(length, width) {
  var safeLength = safeValue(length);
  var safeWidth = safeValue(width);
  return safeLength * safeWidth;
}

function areaSquare(side) {
  var safeSide = safeValue(side);
  return safeSide * safeSide;
}

function areaTrapezoid(base1, base2, height) {
  var safeBase1 = safeValue(base1);
  var safeBase2 = safeValue(base2);
  var safeHeight = safeValue(height);
  return 0.5 * (safeBase1 + safeBase2) * safeHeight;
}

function areaTriangle(base, height) {
  var safeBase = safeValue(base);
  var safeHeight = safeValue(height);
  return 0.5 * safeBase * safeHeight;
}

function perimeterRectangle(length, width) {
  var safeLength = safeValue(length);
  var safeWidth = safeValue(width);
  return 2.0 * safeLength + 2.0 * safeWidth;
}

function perimeterSquare(side) {
  var safeSide = safeValue(side);
  return 4.0 * safeSide;
}

function removeNegatives(values) {
  return values.filter((function (x) {
                return x > 0.0;
              }));
}

function removePositives(values) {
  return values.filter((function (x) {
                return x < 0.0;
              }));
}

function surfaceAreaCube(side) {
  var safeSide = safeValue(side);
  return 6.0 * safeSide * safeSide;
}

function surfaceAreaCylinder(radius, height) {
  var safeRadius = safeValue(radius);
  var safeHeight = safeValue(height);
  return 2.0 * pi * safeRadius * safeHeight;
}

function surfaceAreaSphere(radius) {
  var safeRadius = safeValue(radius);
  return 4.0 * pi * safeRadius * safeRadius;
}

exports.pi = pi;
exports.safeValue = safeValue;
exports.areaCircle = areaCircle;
exports.areaParallelogram = areaParallelogram;
exports.areaRectangle = areaRectangle;
exports.areaSquare = areaSquare;
exports.areaTrapezoid = areaTrapezoid;
exports.areaTriangle = areaTriangle;
exports.perimeterRectangle = perimeterRectangle;
exports.perimeterSquare = perimeterSquare;
exports.removeNegatives = removeNegatives;
exports.removePositives = removePositives;
exports.surfaceAreaCube = surfaceAreaCube;
exports.surfaceAreaCylinder = surfaceAreaCylinder;
exports.surfaceAreaSphere = surfaceAreaSphere;
/* pi Not a pure module */
